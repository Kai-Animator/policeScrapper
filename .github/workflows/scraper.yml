name: Run Scraper

on:
  schedule:
    - cron: "*/15 * * * *" # Run every 15 minutes
  workflow_dispatch: # Allow manual trigger for testing
  # Explicitly NOT running on push/pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # Cancel any running jobs if a new one is triggered

jobs:
  test-notification:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true

      - name: Setup log directories
        run: |
          # Create log directories with proper permissions
          mkdir -p logs
          chmod 750 logs

          # Create today's log file with proper permissions
          today=$(date +%Y-%m-%d)
          touch "logs/$today.log"
          chmod 640 "logs/$today.log"

          # Create run-specific directory
          run_id=$(date +%Y%m%d_%H%M%S)
          mkdir -p "logs/$run_id"
          chmod 750 "logs/$run_id"

      - name: Debug LINE Credentials
        run: |
          if [ -n "${{ secrets.LINE_CHANNEL_TOKEN }}" ]; then
            echo "LINE_CHANNEL_TOKEN is set"
            echo "LINE_CHANNEL_TOKEN length: ${#LINE_CHANNEL_TOKEN}"
          else
            echo "LINE_CHANNEL_TOKEN is not set"
          fi

          if [ -n "${{ secrets.LINE_USER_ID }}" ]; then
            echo "LINE_USER_ID is set"
            echo "LINE_USER_ID length: ${#LINE_USER_ID}"
          else
            echo "LINE_USER_ID is not set"
          fi

      - name: Test LINE Notification
        env:
          LINE_CHANNEL_TOKEN: ${{ secrets.LINE_CHANNEL_TOKEN }}
          LINE_USER_ID: ${{ secrets.LINE_USER_ID }}
        run: |
          run_id=$(date +%Y%m%d_%H%M%S)
          {
            echo "=== LINE Notification Test Started at $(date) ==="
            echo "Run ID: $run_id"
            echo "GitHub Run Number: ${{ github.run_number }}"
            echo "Triggered by: ${{ github.event_name }}"
            echo "========================================"
            
            go run cmd/scraper/main.go notify-test
            
            echo "========================================="
            echo "=== LINE Notification Test Completed at $(date) ==="
          } | tee "logs/$run_id/test.log"

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-${{ github.run_number }}
          path: logs/
          retention-days: 90

  scrape:
    needs: test-notification # Only run if test notification succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Setup log directories
        run: |
          # Create log directories with proper permissions
          mkdir -p logs
          chmod 750 logs

          # Create today's log file with proper permissions
          today=$(date +%Y-%m-%d)
          touch "logs/$today.log"
          chmod 640 "logs/$today.log"

          # Create run-specific directory
          run_id=$(date +%Y%m%d_%H%M%S)
          mkdir -p "logs/$run_id"
          chmod 750 "logs/$run_id"

      - name: Run Scraper
        env:
          LINE_CHANNEL_TOKEN: ${{ secrets.LINE_CHANNEL_TOKEN }}
          LINE_USER_ID: ${{ secrets.LINE_USER_ID }}
        run: |
          run_id=$(date +%Y%m%d_%H%M%S)

          # Run scraper and tee output to both console and file
          {
            echo "=== Scraper Run Started at $(date) ==="
            echo "Run ID: $run_id"
            echo "GitHub Run Number: ${{ github.run_number }}"
            echo "Triggered by: ${{ github.event_name }}"
            echo "========================================"
            
            go run cmd/scraper/main.go 2>&1
            
            echo "========================================="
            echo "=== Scraper Run Completed at $(date) ==="
          } | tee "logs/$run_id/scraper.log"

      - name: Upload run logs
        if: always() # Upload logs whether the run succeeds or fails
        uses: actions/upload-artifact@v4
        with:
          name: scraper-logs-${{ github.run_number }}
          path: |
            logs/
          retention-days: 90 # Keep logs for 3 months

      - name: Clean old logs
        if: always() # Clean up whether the run succeeds or fails
        run: |
          # Keep only logs from the last 90 days
          find logs/ -type f -mtime +90 -delete
          find logs/ -type d -empty -delete
